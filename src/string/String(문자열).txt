
/** String(문자열) **/

String answer = "";

String을 붙이려면 '+'만 있으면 된다.

0이 아닌 Integer.MIN_VALUE를 사용해서도 비교를 통해 가장 큰 값을 구할 수 있다.

StringBuilder(단어).reverse().toString();으로 단어의 어순을 거꾸로 바꿀 수 있다.

아래는 이해하고 필수로 외워야 한다.
            int lt = 0, rt = s.length() - 1;
            while (lt < rt) {
                char tmp = c[lt];
                c[lt] = c[rt];
                c[rt] = tmp;
                lt++; rt--;
            }

String.valueOf(캐릭터 배열);을 통해 'char[]' 타입을 'String' 타입으로 변환할 수 있다.

아래는 많이 쓰는 Charcter의 메서드
        Character.isUpperCase();
        Character.isLowerCase();
        Character.toUpperCase();
        Character.toLowerCase();
        Character.isAlphabetic();

아래는 String 인스턴스에서 사용하는 메서드다. (String은 단순 ==로 비교가 되지 않는다. .equals();를 써야 한다.)
.indexOf();
.charAt();
.isEqualsIgnoreCase();
.replace();
.replaceAll();
.equals();

LinkedHashSet<>()은 중복을 제거하되 순서도 보장한다.

아래는 회문문자열 검사하는 코드
int len = str.length();
for (int i=0; i<len/2; i++) {
    if (str.charAt(i) != str.charAt(len-1-i)) return "NO";
}
return "YES";

정규표현식을 배워야 한다.
